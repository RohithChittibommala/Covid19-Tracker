{"version":3,"sources":["components/cards/cards.jsx","api/api.js","components/charts/chart.jsx","components/coutries/countries.jsx","components/index.js","App.js","index.js","components/cards/Cards.module.css","components/charts/chart.module.css","components/coutries/countries.module.css","app.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","renderCard","label","description","value","Grid","item","component","Card","xs","md","className","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","container","spacing","justify","Date","toDateString","infected","death","url","Fetchdata","country","a","changedUrl","validUrl","console","log","axios","get","FetchDailyData","modifiedData","map","dailydata","total","date","reportDate","FetchCountries","countries","name","Chart","useState","dailyData","setDailydata","useEffect","FetchData","lineChart","labels","datasets","borderColor","fill","backgroundColor","barChart","ctlabel","options","legend","display","title","text","Countries","onChange","setCountries","getCountries","FormControl","formControl","NativeSelect","e","target","key","App","state","handleCountryChange","setState","this","src","alt","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.43c4cd14.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { description } from \"./../index.js\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport cx from \"classnames\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  const renderCard = (label, { value }, lastUpdate, description) => {\r\n    return (\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        md={3}\r\n        className={cx(styles.card, styles[label])}\r\n      >\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            {label}\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp start={0} end={value} duration={2.5} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{lastUpdate}</Typography>\r\n          <Typography variant=\"body2\">{description}</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    );\r\n  };\r\n  if (!confirmed) return \"Loading\";\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={4} justify=\"center\">\r\n        {renderCard(\r\n          \"infected\",\r\n          confirmed,\r\n          new Date(lastUpdate).toDateString(),\r\n          description.infected\r\n        )}\r\n        {renderCard(\r\n          \"recovered\",\r\n          recovered,\r\n          new Date(lastUpdate).toDateString(),\r\n          description.recovered\r\n        )}\r\n        {renderCard(\r\n          \"deaths\",\r\n          deaths,\r\n          new Date(lastUpdate).toDateString(),\r\n          description.death\r\n        )}\r\n      </Grid>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\nlet url = \"https://cors-anywhere.herokuapp.com/https://covid19.mathdro.id/api/\";\r\n\r\nexport const Fetchdata = async (country) => {\r\n  const changedUrl =\r\n    country && country !== \"Global\" ? `${url}/countries/${country}` : url;\r\n\r\n  const validUrl = changedUrl !== url ? changedUrl : url;\r\n  console.log(validUrl);\r\n  try {\r\n    const {\r\n      data: { confirmed, deaths, recovered, lastUpdate },\r\n    } = await axios.get(`${validUrl}`);\r\n    console.log(confirmed);\r\n    return {\r\n      confirmed,\r\n      deaths,\r\n      recovered,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {}\r\n};\r\nexport const FetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}daily`);\r\n    const modifiedData = data.map((dailydata) => ({\r\n      confirmed: dailydata.confirmed.total,\r\n      deaths: dailydata.deaths.total,\r\n      date: dailydata.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const FetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\nFetchCountries();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FetchDailyData } from \"./../../api/api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailydata] = useState([]);\r\n  useEffect(() => {\r\n    const FetchData = async () => {\r\n      setDailydata(await FetchDailyData());\r\n    };\r\n    FetchData();\r\n  }, []);\r\n  confirmed && console.log(confirmed.value);\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map((data) => data.date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"infected\",\r\n            borderColor: \"#333f5f\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      className={styles.ctlabel}\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"people\",\r\n            backgroundColor: [\"blue\", \"green\", \"red\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: `The current status in ${country}`,\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>\r\n      {country && country !== \"Global\" ? barChart : lineChart}\r\n    </div>\r\n  );\r\n  // <Line/>\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { FetchCountries } from \"./../../api/api\";\r\nimport styles from \"./countries.module.css\";\r\n\r\nconst Countries = ({ onChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    const getCountries = async () => {\r\n      setCountries(await FetchCountries());\r\n    };\r\n    getCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect onChange={(e) => onChange(e.target.value)}>\r\n        <option value=\"Global\">Global</option>\r\n        {countries.map((country) => (\r\n          <option value={`${country}`} key={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","export { default as Cards } from \"./cards/cards\";\r\nexport { default as Chart } from \"./charts/chart\";\r\nexport { default as Countries } from \"./coutries/countries\";\r\n\r\nexport const description = {\r\n  infected: \"no of covid19 infected cases \",\r\n  recovered: \"no of covid19 recovered cases \",\r\n  death: \"no of covid19 death cases \",\r\n};\r\nexport const imageUrl = \" https://i.ibb.co/7QpKsCX/image.png\";\r\n","import React, { Component } from \"react\";\nimport { Cards, Chart, Countries } from \"./components/index\";\nimport styles from \"./app.module.css\";\nimport { Fetchdata } from \"./api/api\";\nimport { imageUrl } from \"./components/index\";\nclass App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const data = await Fetchdata();\n    this.setState({ data });\n  }\n  handleCountryChange = async (country) => {\n    const data = await Fetchdata(country);\n    this.setState({ data, country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img src={imageUrl} alt=\"Covid19\" />\n        <Cards data={data} />\n        <Countries onChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__100Ed\",\"card\":\"Cards_card__3H8CU\",\"infected\":\"Cards_infected__UPrn1\",\"recovered\":\"Cards_recovered__388O2\",\"deaths\":\"Cards_deaths__1o9gx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container___QNlS\",\"ctlabel\":\"chart_ctlabel__jRuNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countries_formControl__1umRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__Zapv0\"};"],"sourceRoot":""}